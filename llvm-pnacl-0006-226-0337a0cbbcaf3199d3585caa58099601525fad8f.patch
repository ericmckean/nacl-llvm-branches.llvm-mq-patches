# HG changeset patch
# User -r124899
# Date 1298504194 28800
# Branch pnacl-sfi
# Node ID 0337a0cbbcaf3199d3585caa58099601525fad8f
# Parent fa25892d24f18385a8f8063da53074c178834a8e
Just what it says - for ARM/MC/ELF
http://llvm.org/viewvc/llvm-project?view=rev&revision=124899


Teach ARM/MC/ELF about EF_ARM_EABI_VERSION. The magic number is set to
5 to match the current doc.
Added FIXME reminder Make it really configurable later.
NOTE:
NaCl requires an special ELF e_flags. So does ARM.
PNaCl lib/MC/ELFObjectwriter.cpp had a @LOCALMOD to deal with the NaCl specific e_flags which conflicted with the necessary update to ARM. This required the merged version to have the @LOCALMOD@ as well to handle both cases.

 From llvm-pnacl-0006-226-0337a0cbbcaf3199d3585caa58099601525fad8f.patch

diff -r fa25892d24f1 include/llvm/Support/ELF.h
--- a/include/llvm/Support/ELF.h	Tue Feb 22 17:59:22 2011 -0500
+++ b/include/llvm/Support/ELF.h	Wed Jul 06 12:04:06 2011 -0700
@@ -310,6 +310,10 @@
 // ARM Specific e_flags
 enum { EF_ARM_EABIMASK = 0xFF000000U };
 
+
+// ARM Specific e_flags
+enum { EF_ARM_EABIMASK = 0xFF000000U };
+
 // ELF Relocation types for ARM
 // Meets 2.08 ABI Specs.
 
diff -r fa25892d24f1 lib/MC/ELFObjectWriter.cpp
--- a/lib/MC/ELFObjectWriter.cpp	Tue Feb 22 17:59:22 2011 -0500
+++ b/lib/MC/ELFObjectWriter.cpp	Wed Jul 06 12:04:06 2011 -0700
@@ -1236,7 +1236,6 @@
 
 /// START OF SUBCLASSES for ELFObjectWriter
 //===- ARMELFObjectWriter -------------------------------------------===//
-
 ARMELFObjectWriter::ARMELFObjectWriter(MCELFObjectTargetWriter *MOTW,
                                        raw_ostream &_OS,
                                        bool IsLittleEndian)
@@ -1248,6 +1247,20 @@
 
 // FIXME: get the real EABI Version from the Triple.
 void ARMELFObjectWriter::WriteEFlags() {
+  // @LOCALMOD-BEGIN
+  unsigned e_flag = ELF::EF_ARM_EABIMASK & DefaultEABIVersion;
+  switch (TargetObjectWriter->getOSType()) {
+  case Triple::NativeClient:
+    e_flag |= ELF::EF_NACL_ALIGN_32;
+    break;
+  default: break;
+  }
+  Write32(e_flag);
+  // @LOCALMOD-END
+}
+
+// FIXME: get the real EABI Version from the Triple.
+void ARMELFObjectWriter::WriteEFlags() {
   Write32(ELF::EF_ARM_EABIMASK & DefaultEABIVersion);
 }
 
@@ -1279,6 +1292,20 @@
   return NULL;
 }
 
+// FIXME: get the real EABI Version from the Triple.
+void ARMELFObjectWriter::WriteEFlags() {
+  // @LOCALMOD-BEGIN
+  unsigned e_flag = ELF::EF_ARM_EABIMASK & DefaultEABIVersion;
+  switch (TargetObjectWriter->getOSType()) {
+  case Triple::NativeClient:
+    e_flag |= ELF::EF_NACL_ALIGN_32;
+    break;
+  default: break;
+  }
+  Write32(e_flag);
+  // @LOCALMOD-END
+}
+
 unsigned ARMELFObjectWriter::GetRelocType(const MCValue &Target,
                                           const MCFixup &Fixup,
                                           bool IsPCRel,
