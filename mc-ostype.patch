# HG changeset patch
# Parent 467056f8fdb17696814ec7f69a75e329d358659b
This patch is to be upstreamed.
Turn on OSType for MC layer
This is needed to parse the full OSType at the MC Layer,
to activate NaCl specific processing.

diff -r 467056f8fdb1 include/llvm/MC/MCSubtargetInfo.h
--- a/include/llvm/MC/MCSubtargetInfo.h	Sat Aug 13 13:54:42 2011 -0700
+++ b/include/llvm/MC/MCSubtargetInfo.h	Sat Aug 13 14:27:41 2011 -0700
@@ -14,6 +14,7 @@
 #ifndef LLVM_MC_MCSUBTARGET_H
 #define LLVM_MC_MCSUBTARGET_H
 
+#include "llvm/ADT/Triple.h"
 #include "llvm/MC/SubtargetFeature.h"
 #include "llvm/MC/MCInstrItineraries.h"
 #include <string>
@@ -27,7 +28,7 @@
 /// MCSubtargetInfo - Generic base class for all target subtargets.
 ///
 class MCSubtargetInfo {
-  std::string TargetTriple;            // Target triple
+  Triple TargetTriple;            // Target triple
   const SubtargetFeatureKV *ProcFeatures;  // Processor feature list
   const SubtargetFeatureKV *ProcDesc;  // Processor descriptions
   const SubtargetInfoKV *ProcItins;    // Scheduling itineraries
@@ -37,7 +38,6 @@
   unsigned NumFeatures;                // Number of processor features
   unsigned NumProcs;                   // Number of processors
   uint64_t FeatureBits;                // Feature bits for current CPU + FS
-
 public:
   void InitMCSubtargetInfo(StringRef TT, StringRef CPU, StringRef FS,
                            const SubtargetFeatureKV *PF,
@@ -48,7 +48,7 @@
 
   /// getTargetTriple - Return the target triple string.
   StringRef getTargetTriple() const {
-    return TargetTriple;
+    return StringRef(TargetTriple.getTriple());
   }
 
   /// getFeatureBits - Return the feature bits.
diff -r 467056f8fdb1 lib/MC/MCSubtargetInfo.cpp
--- a/lib/MC/MCSubtargetInfo.cpp	Sat Aug 13 13:54:42 2011 -0700
+++ b/lib/MC/MCSubtargetInfo.cpp	Sat Aug 13 14:27:41 2011 -0700
@@ -26,7 +26,7 @@
                                      const unsigned *OC,
                                      const unsigned *FP,
                                      unsigned NF, unsigned NP) {
-  TargetTriple = TT;
+  TargetTriple.setTriple(Twine(TargetTriple.normalize(TT)));
   ProcFeatures = PF;
   ProcDesc = PD;
   ProcItins = PI;
@@ -41,7 +41,6 @@
                                         ProcFeatures, NumFeatures);
 }
 
-
 /// ReInitMCSubtargetInfo - Change CPU (and optionally supplemented with
 /// feature string) and recompute feature bits.
 uint64_t MCSubtargetInfo::ReInitMCSubtargetInfo(StringRef CPU, StringRef FS) {
