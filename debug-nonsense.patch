# HG changeset patch
# Parent 99bf84dfe2bedad55022bb066eb438ef77b299cf
# User Jason Kim <jasonwkim@google.com>
debug nonsense

diff -r 99bf84dfe2be lib/VMCore/Instructions.cpp
--- a/lib/VMCore/Instructions.cpp	Sun Aug 14 14:45:14 2011 -0700
+++ b/lib/VMCore/Instructions.cpp	Sun Aug 14 16:09:54 2011 -0700
@@ -427,7 +427,7 @@
 //===----------------------------------------------------------------------===//
 //                        InvokeInst Implementation
 //===----------------------------------------------------------------------===//
-
+extern "C" int printf(const char *, ...);
 void InvokeInst::init(Value *Fn, BasicBlock *IfNormal, BasicBlock *IfException,
                       ArrayRef<Value *> Args, const Twine &NameStr) {
   assert(NumOperands == 3 + Args.size() && "NumOperands not set up?");
@@ -443,10 +443,18 @@
           (FTy->isVarArg() && Args.size() > FTy->getNumParams())) &&
          "Invoking a function with bad signature");
 
-  for (unsigned i = 0, e = Args.size(); i != e; i++)
-    assert((i >= FTy->getNumParams() || 
-            FTy->getParamType(i) == Args[i]->getType()) &&
-           "Invoking a function with a bad signature!");
+  for (unsigned i = 0, e = Args.size(); i != e; i++) {
+    if (!(i >= FTy->getNumParams() ||
+           FTy->getParamType(i) == Args[i]->getType())) {
+      printf("Param %d/%d mismatch %p %p\n", i,
+             FTy->getNumParams(), FTy->getParamType(i), Args[i]->getType());
+      FTy->getParamType(i)->dump();
+      Args[i]->getType()->dump();
+      Args[i]->dump();
+      printf("pid %d\n", getpid());
+      // sleep(30);
+    }
+  }
 #endif
 
   std::copy(Args.begin(), Args.end(), op_begin());
